buildscript {
    repositories {
        /*maven {
            url = 'http://revy:49161/repository/MinecraftForge/'
            allowInsecureProtocol = true
        }
        maven {
            url = 'http://revy:49161/repository/maven-central/'
            allowInsecureProtocol = true
        }
        maven {
            url = 'http://revy:49161/repository/jcenter/'
            allowInsecureProtocol = true
        }*/
        maven { url = 'https://maven.minecraftforge.net' }
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '[6.0.24,6.2)', changing: true
        classpath 'org.spongepowered:mixingradle:0.7.+'

    }
}

plugins {
    id "com.matthewprenger.cursegradle" version "1.4.0"
    //id 'nu.studer.credentials' version '1.0.7'
}

apply plugin: 'net.minecraftforge.gradle'
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: 'org.spongepowered.mixin'

compileJava { options.encoding = "UTF-8" }

version = "${version_major}.${version_minor}.${version_patch}"
archivesBaseName = "${mod_id}_${mc_version}"

// Mojang ships Java 17 to end users in 1.18+.
java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))
minecraft {
    // The mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   Snapshot are built nightly.
    // stable_#            Stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // Simply re-run your setup task after changing the mappings to update your workspace.
    mappings channel: 'official', version: '1.18.2'
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.

    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    // Default run configurations.
    // These can be tweaked, removed, or duplicated as needed.
    runs {
        client {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            // The markers can be changed as needed.
            // "SCAN": For mods scan.
            // "REGISTRIES": For firing of registry events.
            // "REGISTRYDUMP": For getting the contents of all registries.
            property 'forge.logging.markers', 'REGISTRIES'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'
            arg "-mixin.config=mixins.hostile_humans.json"

            mods {
                hostile_humans {
                    source sourceSets.main
                }
            }

            // Required: Patchouli Mixin Support
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
        }

        server {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            // The markers can be changed as needed.
            // "SCAN": For mods scan.
            // "REGISTRIES": For firing of registry events.
            // "REGISTRYDUMP": For getting the contents of all registries.
            property 'forge.logging.markers', 'REGISTRIES'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            mods {
                hostile_humans {
                    source sourceSets.main
                }
            }

            // Required: Patchouli Mixin Support
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
        }

        data {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            // The markers can be changed as needed.
            // "SCAN": For mods scan.
            // "REGISTRIES": For firing of registry events.
            // "REGISTRYDUMP": For getting the contents of all registries.
            property 'forge.logging.markers', 'REGISTRIES'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            // Specify the modid for data generation, where to output the resulting resource, and where to look for existing resources.
            args '--mod', 'hostile_humans', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                hostile_humans {
                    source sourceSets.main
                }
            }
        }
    }
}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

// Curse Maven
repositories {
    /*maven {
        url "http://revy:49161/repository/CurseMaven/"
        allowInsecureProtocol = true
    }*/
    maven {
        url "https://www.cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
    maven {
        name = 'GeckoLib'
        url 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/'
    }
}

dependencies {
    // Specify the version of Minecraft to use, If this is any group other then 'net.minecraft' it is assumed
    // that the dep is a ForgeGradle 'patcher' dependency. And it's patches will be applied.
    // The userdev artifact is a special name and will get all sorts of transformations applied to it.
    minecraft 'net.minecraftforge:forge:1.18.2-40.2.10'
    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'

    runtimeOnly fg.deobf("curse.maven:backpacks-321117:4498452")
    runtimeOnly fg.deobf("curse.maven:villager_names-345854:4421766")
    runtimeOnly fg.deobf("curse.maven:collective-342584:4436950")

    //visual pathfinder
    runtimeOnly fg.deobf("curse.maven:paths-590716:3882633")

    // runtimeOnly fg.deobf("curse.maven:dungeon_mobs-428883:4344582")

    compileOnly "curse.maven:immersive_armors-580681:4362285"
    compileOnly "curse.maven:villager_names-345854:4421766"
    compileOnly "curse.maven:collective-342584:4436950"
    compileOnly "curse.maven:backpacks-321117:4498452"
    compileOnly "curse.maven:dungeon_mobs-428883:4344582"
    compileOnly "curse.maven:farmersdelight-398521:4679315"

}


mixin {
    // MixinGradle Settings
    add sourceSets.main, 'mixins.hostile_humans.refmap.json'
    config 'mixins.hostile_humans.json'
    debug.verbose = true
    debug.export = true
}


// Example for how to get properties into the manifest for reading by the runtime..
jar {
    manifest {
        attributes([
                "Specification-Title"     : "${mod_name}",
                "Specification-Vendor"    : "${vendor_name}",
                "Specification-Version"   : "1.1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : "${version}",
                "Implementation-Vendor"   : "${mod_id}",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                "TweakClass"              : "org.spongepowered.asm.launch.MixinTweaker",
                "TweakOrder"              : 0,
                "MixinConfigs"            : "mixins.hostile_humans.json",
                "FMLAT"                   : "accesstransformer.cfg" // added

        ])
    }
    rename "mixin.refmap.json", "mixins.hostile_humans.refmap.json"

}

// Example configuration to allow publishing using the maven-publish task
// This is the preferred method to reobfuscate your jar file
jar.finalizedBy('reobfJar')
// However if you are in a multi-project build, dev time needs unobfed jar files, so you can delay the obfuscation until publishing by doing
//publish.dependsOn('reobfJar')


publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}
